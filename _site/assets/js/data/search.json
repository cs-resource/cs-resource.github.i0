[
  
  {
    "title": "Advance Computer Programming Practical list - 1",
    "url": "/posts/Practical-list-1/",
    "categories": "Advance Computer Programming",
    "tags": "practical list - 1",
    "date": "2023-02-22 05:30:00 +0530",
    





    
    "snippet": "Q1 Write a C program to declare an array capable of storing 10 student marks. Input marks of all 10 students and find their average.Code#include &lt;stdio.h&gt;void main(){    int n[11];    int i,j...",
    "content": "Q1 Write a C program to declare an array capable of storing 10 student marks. Input marks of all 10 students and find their average.Code#include &lt;stdio.h&gt;void main(){    int n[11];    int i,j,sum=0;    float avg;       for ( i = 1; i &lt;= 10; i++ ) {        printf(\"Enter The Marks for %d Student :: \",i);        scanf(\"%d\",&amp;n[i]);        sum = sum + n[i];    }    avg = sum/10;    printf(\"\\nAverage of all 10 Students marks is :: %.2f\",avg);}OutputEnter The Marks for 1 Student :: 50Enter The Marks for 2 Student :: 25Enter The Marks for 3 Student :: 50Enter The Marks for 4 Student :: 25Enter The Marks for 5 Student :: 50Enter The Marks for 6 Student :: 25Enter The Marks for 7 Student :: 50Enter The Marks for 8 Student :: 25Enter The Marks for 9 Student :: 50Enter The Marks for 10 Student :: 25Average of all 10 Students marks is :: 37.00Q2 Write a C program to declare, initialize, input elements in array and print array. How to input and display elements in an array using for loop in C programming. C program to input and print array elements using loop.Code#include &lt;stdio.h&gt;#define MAX_SIZE 100void main(){    int arr[MAX_SIZE];     int i, n;    printf(\"Enter size of array: \");    scanf(\"%d\", &amp;n);    printf(\"Enter %d elements in the array : \\n\", n);    for(i=1; i&lt;=n; i++)    {        printf(\"Element %d = \", i);        scanf(\"%d\", &amp;arr[i]);    }        printf(\"\\nElements in array are: \");    for(i=1; i&lt;=n; i++)    {        printf(\"%d, \", arr[i]);    }}OutputElement 1 = 2Element 2 = 4Element 3 = 6Element 4 = 46Element 5 = 4Elements in array are: 2, 4, 6, 46, 4,Q3 Write a C program to input elements in array and print all negative elements. How to display all negative elements in array using loop in C program.Code#include &lt;stdio.h&gt;#define MAX_SIZE 100 void main(){    int arr[MAX_SIZE];     int i, n;    printf(\"Enter size of the array : \");    scanf(\"%d\", &amp;n);        for(i=1; i&lt;=n; i++)    {        printf(\"Enter %d elements in the array :: \", n);        scanf(\"%d\", &amp;arr[i]);    }    printf(\"\\nAll negative elements in array are : \");    for(i=1; i&lt;=n; i++)    {        if(arr[i] &lt; 0)        {            printf(\"%d\\t\", arr[i]);        }    }}OutputEnter size of the array : 4Enter 4 elements in the array :: -3Enter 4 elements in the array :: -5Enter 4 elements in the array :: 3Enter 4 elements in the array :: 3All negative elements in array are : -3 -5Q4 Write a C program to input elements in array and copy all elements of first array into second array.Code#include &lt;stdio.h&gt;#define MAX_SIZE 100void main(){    int original[MAX_SIZE], copy[MAX_SIZE];    int i, size;    printf(\"Enter the size of the array : \");    scanf(\"%d\", &amp;size);        printf(\"Enter elements of Original array : \\n\");    for(i=1; i&lt;=size; i++)    {        printf(\"Enter %d elements in the array :: \", i);        scanf(\"%d\", &amp;original[i]);    }    for(i=1; i&lt;=size; i++)    {        copy[i] = original[i];    }    printf(\"\\nElements of Original array are : \");    for(i=1; i&lt;=size; i++)    {        printf(\"%d, \", original[i]);    }    printf(\"\\nElements of Copy array are : \");    for(i=1; i&lt;=size; i++)    {        printf(\"%d, \", copy[i]);    }}OutputEnter the size of the array : 3Enter elements of Original array :Enter 1 elements in the array :: 3Enter 2 elements in the array :: 4Enter 3 elements in the array :: 4Elements of Original array are : 3, 4, 4,Elements of Copy array are : 3, 4, 4,Q5 Write a C program to insert element in array at specified position. C program to insert element in array at given position.Code#include &lt;stdio.h&gt;#define MAX_SIZE 100void main(){    int arr[MAX_SIZE];    int i, size, n, pos;    printf(\"Enter size of the array : \");    scanf(\"%d\", &amp;size);    printf(\"Enter elements in array : \");    for(i=0; i&lt;size; i++)    {        scanf(\"%d\", &amp;arr[i]);    }    printf(\"Enter element to insert : \");    scanf(\"%d\", &amp;n);    printf(\"Enter the element position : \");    scanf(\"%d\", &amp;pos);    if(pos &gt; size+1 || pos &lt;= 0)    {        printf(\"Invalid position! Please enter position between 1 to %d\", size);    }    else    {        for(i=size; i&gt;=pos; i--)        {            arr[i] = arr[i-1];        }                arr[pos-1] = n;        size++;         printf(\"Array elements after insertion : \");        for(i=0; i&lt;size; i++)        {            printf(\"%d, \", arr[i]);        }    }}OutputEnter size of the array : 3Enter elements in array : 1 2 3Enter element to insert : 4Enter the element position : 3Array elements after insertion : 1, 2, 4, 3,Q6 Write a C program to delete element from array at specified position. How to remove element from array at given position in C programming.Code#include &lt;stdio.h&gt;#define MAX_SIZE 100int main(){    int arr[MAX_SIZE];    int i, size, pos;    printf(\"Enter size of the array : \");    scanf(\"%d\", &amp;size);    printf(\"Enter elements in array : \");    for(i=0; i&lt;size; i++)    {        scanf(\"%d\", &amp;arr[i]);    }    printf(\"Enter the element position to delete : \");    scanf(\"%d\", &amp;pos);    if(pos &lt; 0 || pos &gt; size)    {        printf(\"Invalid position! Please enter position between 1 to %d\", size);    }    else    {        for(i=pos-1; i&lt;size-1; i++)        {            arr[i] = arr[i + 1];        }        size--;        printf(\"\\nElements of array after delete are : \");        for(i=0; i&lt;size; i++)        {            printf(\"%d, \", arr[i]);        }    }}OutputEnter size of the array : 5Enter elements in array : 1 2 3 4 6Enter the element position to delete : 5Elements of array after delete are : 1, 2, 3, 4Q7 Write a C program to input elements in two array and merge two array to third array.Code#include &lt;stdio.h&gt;#define MAX_SIZE 100      void main(){    int arr1[MAX_SIZE], arr2[MAX_SIZE], mergeArray[MAX_SIZE * 2];    int size1, size2, mergeSize;    int index1, index2, mergeIndex;    int i;         printf(\"Enter the size of first array : \");    scanf(\"%d\", &amp;size1);    printf(\"Enter elements in first array : \");    for(i=0; i&lt;size1; i++)    {        scanf(\"%d\", &amp;arr1[i]);    }    printf(\"\\nEnter the size of second array : \");    scanf(\"%d\", &amp;size2);    printf(\"Enter elements in second array : \");    for(i=0; i&lt;size2; i++)    {        scanf(\"%d\", &amp;arr2[i]);    }    mergeSize = size1 + size2;    index1 = 0;    index2 = 0;    for(mergeIndex=0; mergeIndex &lt; mergeSize; mergeIndex++)    {        if(index1 &gt;= size1 || index2 &gt;= size2)        {            break;        }        if(arr1[index1] &lt; arr2[index2])        {            mergeArray[mergeIndex] = arr1[index1];            index1++;        }        else        {            mergeArray[mergeIndex] = arr2[index2];            index2++;        }    }    while(index1 &lt; size1)    {        mergeArray[mergeIndex] = arr1[index1];        mergeIndex++;        index1++;    }    while(index2 &lt; size2)    {        mergeArray[mergeIndex] = arr2[index2];        mergeIndex++;        index2++;    }        printf(\"\\nArray merged in ascending order : \");    for(i=0; i&lt;mergeSize; i++)    {        printf(\"%d, \", mergeArray[i]);    }}OutputEnter the size of first array : 5Enter elements in first array : 1 2 3 4 5Enter the size of second array : 5Enter elements in second array : 6 7 8 9 10Array merged in ascending order : 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,Q8 Write a C program to input elements in array and find reverse of array.Code#include &lt;stdio.h&gt;#define MAX_SIZE 100   int main(){    int arr[MAX_SIZE];    int size, i;    printf(\"Enter size of the array: \");    scanf(\"%d\", &amp;size);    printf(\"Enter elements in array: \");    for(i=0; i&lt;size; i++)    {        scanf(\"%d\", &amp;arr[i]);    }    printf(\"\\nArray in reverse order: \");    for(i = size-1; i&gt;=0; i--)    {        printf(\"%d, \", arr[i]);    }    return 0;}OutputEnter size of the array: 5Enter elements in array: 1 2 3 4 5Array in reverse order: 5, 4, 3, 2, 1,Q9 Write a C program to input elements in array and search whether an element exists in array or not.Code#include &lt;stdio.h&gt;#define MAX_SIZE 100  void main(){    int arr[MAX_SIZE];    int size, i, toSearch, found;    printf(\"Enter size of array: \");    scanf(\"%d\", &amp;size);    printf(\"Enter elements in array: \");    for(i=0; i&lt;size; i++)    {        scanf(\"%d\", &amp;arr[i]);    }    printf(\"\\nEnter element to search: \");    scanf(\"%d\", &amp;toSearch);    found = 0;         for(i=0; i&lt;size; i++)    {        if(arr[i] == toSearch)        {            found = 1;            break;        }    }    if(found == 1)    {        printf(\"\\n%d is found at position %d\", toSearch, i + 1);    }    else    {        printf(\"\\n%d is not found in the array\", toSearch);    }}OutputEnter size of array: 5Enter elements in array: 1 2 3 4 5Enter element to search: 33 is found at position 3Q10 Write a C program to input elements in array and sort array elements in ascending or descending order.Code#include &lt;stdio.h&gt;#define MAX_SIZE 100    void main(){    int arr[MAX_SIZE];    int size;    int i, j, temp;    printf(\"Enter size of array: \");    scanf(\"%d\", &amp;size);    printf(\"Enter elements in array: \");    for(i=0; i&lt;size; i++)    {        scanf(\"%d\", &amp;arr[i]);    }    for(i=0; i&lt;size; i++)    {        for(j=i+1; j&lt;size; j++)        {            if(arr[i] &gt; arr[j])            {                temp     = arr[i];                arr[i] = arr[j];                arr[j] = temp;            }        }    }    printf(\"\\nElements of array in ascending order: \");    for(i=0; i&lt;size; i++)    {        printf(\"%d, \", arr[i]);    }}OutputEnter size of array: 5Enter elements in array: 5 4 3 2 1Elements of array in ascending order: 1, 2, 3, 4, 5,Q11 Write a C program to read elements in two matrices and add elements of both matrices.Code#include &lt;stdio.h&gt;#define SIZE 3 void main(){    int A[SIZE][SIZE];     int B[SIZE][SIZE];     int C[SIZE][SIZE];     int row, col;    printf(\"Enter elements in matrix A of size 3x3: \\n\");    for(row=0; row&lt;SIZE; row++)    {        for(col=0; col&lt;SIZE; col++)        {            scanf(\"%d\", &amp;A[row][col]);        }    }    printf(\"\\nEnter elements in matrix B of size 3x3: \\n\");    for(row=0; row&lt;SIZE; row++)    {        for(col=0; col&lt;SIZE; col++)        {            scanf(\"%d\", &amp;B[row][col]);        }    }    for(row=0; row&lt;SIZE; row++)    {        for(col=0; col&lt;SIZE; col++)        {            C[row][col] = A[row][col] + B[row][col];        }    }    printf(\"\\nSum of matrices A+B = \\n\");    for(row=0; row&lt;SIZE; row++)    {        for(col=0; col&lt;SIZE; col++)        {            printf(\"%d \", C[row][col]);        }        printf(\"\\n\");    }}OutputEnter elements in matrix A of size 3x3:1 2 34 5 67 8 9Enter elements in matrix B of size 3x3:9 8 76 5 43 2 1Sum of matrices A+B =10 10 1010 10 1010 10 10Q12 Write a C program to read elements in two matrices and find the difference of two matrices.Code#include &lt;stdio.h&gt;#define SIZE 3int main(){    int A[SIZE][SIZE];      int B[SIZE][SIZE];      int C[SIZE][SIZE];      int row, col;    printf(\"Enter elements in matrix A of size 3x3: \\n\");    for(row=0; row&lt;SIZE; row++)    {        for(col=0; col&lt;SIZE; col++)        {            scanf(\"%d\", &amp;A[row][col]);        }    }    printf(\"\\nEnter elements in matrix B of size 3x3: \\n\");    for(row=0; row&lt;SIZE; row++)    {        for(col=0; col&lt;SIZE; col++)        {            scanf(\"%d\", &amp;B[row][col]);        }    }    for(row=0; row&lt;SIZE; row++)    {        for(col=0; col&lt;SIZE; col++)        {            C[row][col] = A[row][col] - B[row][col];        }    }    printf(\"\\nDifference of two matrices A-B = \\n\");    for(row=0; row&lt;SIZE; row++)    {        for(col=0; col&lt;SIZE; col++)        {            printf(\"%d \", C[row][col]);        }        printf(\"\\n\");    }}OutputInput elements in 3x3 matrix1:1 2 34 5 67 8 9Input elements in 3x3 matrix2:9 8 76 5 43 2 1Difference of two matrices A-B =-8 -6 -4-2 0 24 6 8Q13 Write a C program to enter elements in two matrices and check whether both matrices are equal or not.Code#include &lt;stdio.h&gt;#define SIZE 3void main(){    int A[SIZE][SIZE];     int B[SIZE][SIZE];    int row, col, isEqual;    printf(\"Enter elements in matrix A of size %dx%d: \\n\", SIZE, SIZE);    for(row=0; row&lt;SIZE; row++)    {        for(col=0; col&lt;SIZE; col++)        {            scanf(\"%d\", &amp;A[row][col]);        }    }    printf(\"\\nEnter elements in matrix B of size %dx%d: \\n\");    for(row=0; row&lt;SIZE; row++)    {        for(col=0; col&lt;SIZE; col++)        {            scanf(\"%d\", &amp;B[row][col]);        }    }    isEqual = 1;    for(row=0; row&lt;SIZE; row++)    {        for(col=0; col&lt;SIZE; col++)        {            if(A[row][col] != B[row][col])            {                isEqual = 0;                break;            }        }    }    if(isEqual == 1)    {        printf(\"\\nMatrix A is equal to Matrix B\");    }    else    {        printf(\"\\nMatrix A is not equal to Matrix B\");    }}OutputEnter elements in matrix A of size 3x3:1 2 34 5 67 8 9Enter elements in matrix B of size 6422288x3:1 2 34 5 67 8 9Matrix A is equal to Matrix BQ14 Write a C program to read elements in a matrix and find transpose of the given matrix.Code#include &lt;stdio.h&gt;#define MAX_ROWS 3#define MAX_COLS 3int main(){    int A[MAX_ROWS][MAX_COLS];      int B[MAX_COLS][MAX_ROWS];      int row, col;    printf(\"Enter elements in matrix of size %dx%d: \\n\", MAX_ROWS, MAX_COLS);    for(row=0; row&lt;MAX_ROWS; row++)    {        for(col=0; col&lt;MAX_COLS; col++)        {            scanf(\"%d\", &amp;A[row][col]);        }    }    for(row=0; row&lt;MAX_ROWS; row++)    {        for(col=0; col&lt;MAX_COLS; col++)        {            B[col][row] = A[row][col];        }    }    printf(\"\\nOriginal matrix: \\n\");    for(row=0; row&lt;MAX_ROWS; row++)    {        for(col=0; col&lt;MAX_COLS; col++)        {            printf(\"%d \", A[row][col]);        }        printf(\"\\n\");    }        printf(\"Transpose of matrix A: \\n\");    for(row=0; row&lt;MAX_COLS; row++)    {        for(col=0; col&lt;MAX_ROWS; col++)        {            printf(\"%d \", B[row][col]);        }        printf(\"\\n\");    }}OutputEnter elements in matrix of size 3x3:1 2 34 5 67 8 9Original matrix:1 2 34 5 67 8 9Transpose of matrix A:1 4 72 5 83 6 9Q15 Write a C program to find length of a string using loop. How to find length of a string without using in-built library function strlen() in C programming.Code#include &lt;stdio.h&gt;int main() {    char s[] = \"CS Resource\";    int i;    for (i = 0; s[i] != '\\0'; ++i);        printf(\"Length of the string: %d\", i);    return 0;}OutputLength of the string: 11"
  },
  
  {
    "title": "Introduction to ADVANCED COMPUTER PROGRAMMING",
    "url": "/posts/introduction/",
    "categories": "",
    "tags": "",
    "date": "2023-01-13 05:30:00 +0530",
    





    
    "snippet": "IntroductionADVANCED COMPUTER PROGRAMMING in C language refers to the use of advanced techniques and concepts in software development using the C programming language. This can include things like ...",
    "content": "IntroductionADVANCED COMPUTER PROGRAMMING in C language refers to the use of advanced techniques and concepts in software development using the C programming language. This can include things like pointer manipulation, memory management, data structures, algorithms, and more. It also involves the use of various libraries and frameworks to build complex software systems. The goal of advanced programming in C is to create efficient, reliable, and maintainable software that can perform well in resource-constrained environments. Additionally, C programming is also widely used in system programming like operating systems, embedded systems, and device drivers.Sub-Topics      Data Structures: Study of different data structures such as arrays, linked lists, trees, graphs, and more, and their implementation in various programming languages.        Algorithms: Study of various algorithms such as sorting, searching, and optimization algorithms and their implementation in various programming languages.        Object-Oriented Programming: Study of object-oriented concepts such as classes, objects, inheritance, polymorphism, and more, and their implementation in various programming languages.        Design Patterns: Study of common software design patterns such as the Singleton pattern, the Observer pattern, the Factory pattern, and more, and their implementation in various programming languages.        Concurrent and Parallel Programming: Study of programming techniques for writing concurrent and parallel software, such as multi-threading and multi-processing, and their implementation in various programming languages.        Distributed Systems: Study of distributed systems concepts such as distributed computing, distributed databases, and distributed algorithms, and their implementation in various programming languages.        Network Programming: Study of network programming concepts such as sockets, protocols, and network security, and their implementation in various programming languages.        Database programming: Study of Database concepts such as SQL, Database design, Database normalization and their implementation in various programming languages.        Cloud Computing: Study of Cloud computing concepts such as Cloud services, Cloud storage, Cloud security and their implementation in various programming languages        Artificial intelligence and Machine Learning: Study of AI and ML concepts such as Neural Networks, Deep Learning, Natural Language Processing and their implementation in various programming languages.  "
  }
  
]

